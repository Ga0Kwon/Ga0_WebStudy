/*
	알고리즘[순서도] : 코드 흐름 순서 [if/for]
		
	반복문 : 코드 반복
		1. for [API가 다양 -> 형태가 다양]
			1. for(초기값; 조건문; 증감식){
				실행문;
			}
			초기값 : 반복변수 처음값
			조건문 : 조건이 true이면 실행O, False이면 실행X
			증감식 : 반복변수 증가/감소 단위
			실행문 : 만약에 조건이 true이면 실행되는 구역
			2. *배열/리스트 
				1) for(초기값; 배열.length; 증감식){ 실행문 }
				2) for(반복변수 of 배열/리스트){실행문;} -> 자바에 없음.
				3) for(반복변수 in 배열/리스트){실행문;} -> 자바에 없음.
		2. while
			1) 형태
				1> while(true){실행문;} : 무한루프
				2> 조건이 true이면 {}안으로 들어감 [상수 조건 조심!!]
					while(조건){
					
					}
		3. 증감식
			i++ vs. i+=1 vs. i = i + 1 :1씩 증가
			i+=3 vs. i = i + 3 :3씩 증가
			예 ) i = 1 일때 i + 2 : 홀수만 반복
			예 ) i = 0 일때 i + 3 : 3배수
				3> *순서에 따른 반복
					let i = 0; //1.반복 변수 선언 [초기값]
					while(i > 10){ //2. 조건문
						i++; //3. 증감식 [반복 변수에 증감]
						실행문 //4. 실행문
					}
*/

//1. while문의 무한루프
/*while(true){alert("반복실행");}*/

//2. while [조건이 상수이면 반복]
/*while(10>5){alert("실행문");}*/ //10이 5보다 크니까 반복 실행

//3. while
let 입력 = prompt("입력 :"); //입력에 따른 조건 결과가 바뀌니까 반복여부
while(입력 != 'exit'){ //while start / 입력된 값이 exit 아니면 아래 코드가 실행
	console.log('실행중1');
	입력 = prompt('입력');
} //while end / while이 종료되는 조건 : 입력된 값이 exit 이면 종료

//4. while[순서 대로 반복]
let i = 0; //반복 순서 번호 변수 [ 반복 몇번 되었는지 체크 함수 ]
while(i < 10){ //while s /종료 조건 : i가 10이면[false] 종료
	console.log("실행중2 : " +i);
	i++; //i변수[반복변수] 1증가
} //while end

//1. for문 []
for(let j = 0; j < 10; j++){ //for start
	//j는 0부터 10미만[9]까지 1씩 증가하면서 반복 => 10회 반복
	console.log("실행중3 : " +j);
} //for end

//2. 배열과 for문
//1)0부터 마지막 인덱스까지의 J를 반복해서 배열명[인덱스=j] 요소 호출
let 과일상자 = ["사과", "포도", "딸기"]; //데이터 3개를 저장하는 배열 선언
for(let j = 0; j <과일상자.length; j++){ //길이는 1부터, 인덱스는 0부터 시작.
	//j는 0부터 배열의 길이[3] 전까지 : 0 ~ 2까지 : 3회 
	console.log(j +"번째 과일 이름 : " + 과일상자[j]);
}
//2) 향상된 for문을 이용해서 자동으로 
//of 키워드 : of기준으로 오른쪽에 있는 배열/리스트내 요소 하나씩 왼쪽 변수에 반복 -> 인덱스를 알수 없음.
for(let j of 과일상자){ //for start
	console.log("요소의 값: "+j); 
}//for end

//3) in 키워드 : in 기준으로 오른쪽에 있는 배열/리스트내 요소 인덱스를 하나씩 왼쪽 변수에 반복
for(let j in 과일상자){
	console.log("요소의 인덱스: " + j);
}

